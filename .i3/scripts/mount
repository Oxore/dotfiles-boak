#!/bin/sh
#
# Originally authored by Luke Smith https://github.com/LukeSmithxyz
#
# Gives a dmenu (rofi) prompt to mount unmounted drives.
#
# MTP devices support still unimplemented

pgrep -x rofi && exit

getmount() {
  [ -z "$chosen" ] && exit 1
  mp="$(find $1 | rofi -dmenu -p "Type in mount point.")"
  [ "$mp" = "" ] && exit 1
  if [ ! -d "$mp" ]; then
    mkdiryn=$(printf "No\\nYes" | rofi -dmenu -p "$mp does not exist. Create it?")
    [ "$mkdiryn" = "Yes" ] && (mkdir -p "$mp" || sudo -A mkdir -p "$mp")
  fi
}

mountusb() {
  chosen="$(echo "$usbdrives" | rofi -dmenu -p "Mount which drive?" | awk '{print $1}')"
  [ -z "$chosen" ] && exit
  udevil mount "$chosen" && notify-send "\"$chosen\" mounted" && exit 0
}

mountandroid() {
  chosen=$(echo "$anddrives" | rofi -dmenu -p "Which Android device?" | cut -d : -f 1)
  [ -z "$chosen" ] && exit
  getmount "$HOME -maxdepth 3 -type d"
  simple-mtpfs --device "$chosen" "$mp"
  notify-send "Android device mounted to \"$mp\""
}

asktype() {
  case $(printf "USB\\nAndroid" | rofi -dmenu -p "Mount a USB drive or Android device?") in
    USB) mountusb ;;
    Android) mountandroid ;;
  esac
}

#anddrives=$(jmtpfs -l 2>/dev/null)
usbdrives="$(lsblk -rpo "name,type,size,mountpoint" | awk '$2=="part"&&$4==""{printf "%s (%s)\n",$1,$3}')"

if [ -z "$usbdrives" ]; then
  [ -z "$anddrives" ] && echo "No USB drive or Android device detected" && exit
  echo "Android device(s) detected."
  mountandroid
else
  if [ -z "$anddrives" ]; then
    echo "USB drive(s) detected."
  mountusb
  else
    echo "Mountable USB drive(s) and Android device(s) detected."
    asktype
  fi
fi
